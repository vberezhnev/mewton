generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  telegramId       BigInt   @unique
  username         String
  firstName        String
  lastName         String
  points           Int      @default(0)
  energy           Int      @default(1000)
  energyReFillList Int      @default(0)
  balance          Float    @default(0)
  isAdmin          Boolean? @default(false)
  catsBought       Int?     @default(0)
  totalEarned       Float?   @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  referralsMade    Referral[] @relation("ReferrerRelation")
  referralReceived Referral?  @relation("ReferredUserRelation")
  tasks            Tasks[]    @relation("UserTasks")
  boosts           Boost[]    @relation("UserBoosts")
}

model Referral {
  id         Int   @id @default(autoincrement())
  referrerId Int
  referredId Int   @unique
  referrer   User  @relation("ReferrerRelation", fields: [referrerId], references: [id])
  referred   User? @relation("ReferredUserRelation", fields: [referredId], references: [id])

  invitedAt DateTime @default(now())

  @@index([referrerId])
  @@index([referredId])
}

model Tasks {
  id         Int    @id @default(autoincrement())
  cannelLink String
  users      User[] @relation("UserTasks")
}

model Boost {
  id               Int      @id @default(autoincrement())
  name             String
  imageUrl         String
  buyPrice         Float
  boostPrice       Float
  boostLastBuyDate DateTime
  isAvailable      Boolean  @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[] @relation("UserBoosts")
}
